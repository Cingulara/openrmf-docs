# put the apis.js into the proper area for the path to call within K8s
apiVersion: v1
kind: ConfigMap
metadata:
  name: openrmf-apiconfig
  namespace: {{.Values.namespace | default "openrmf"}}
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: web-ui-ingress
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: helm
data:
  apis.js: |
    var readAPI = '{{.Values.readAPI}}'
    var scoreAPI = '{{.Values.scoreAPI}}'
    var saveAPI = '{{.Values.saveAPI}}'
    var uploadAPI = '{{.Values.uploadAPI}}'
    var templateAPI = '{{.Values.templateAPI}}'
    var complianceAPI = '{{.Values.complianceAPI}}'
    var controlAPI = '{{.Values.controlAPI}}'
    var auditAPI = '{{.Values.auditAPI}}'
    var reportAPI = '{{.Values.reportAPI}}'
    var urlKeycloakMenuLink = '{{.Values.identityProviderURL}}';
    var urlMetricsMenuLink = '{{.Values.urlMetricsMenu}}';
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openrmf-authconfig
  namespace: {{.Values.namespace | default "openrmf"}}
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: web-ui-ingress
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: helm
data:
  auth.js: |
    var keycloak = Keycloak({ url: '{{.Values.identityProviderURL}}', realm: '{{.Values.identityProviderRealm}}', clientId: '{{.Values.identityProviderClientId}}'});
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openrmf-web
  namespace: {{.Values.namespace | default "openrmf"}}
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: web-ui-ingress
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: helm
spec:
  selector:
    matchLabels:
      run: openrmf-web
  replicas: 1
  template:
    metadata:
      labels:
        run: openrmf-web
    spec:
      containers:
      - name: openrmf-web
        image: docker.io/cingulara/openrmf-web:{{.Values.webuiImage | default "latest"}}
        volumeMounts:
        - name: apiconfig-volume
          mountPath: /usr/share/nginx/html/js/apis.js
          subPath: apis.js
        - name: authconfig-volume
          mountPath: /usr/share/nginx/html/js/auth.js
          subPath: auth.js
        ports:
        - name: web-port
          containerPort: 8080
        resources:
          limits:
            memory: "400M"
            cpu: "500m"
          requests:
            memory: "150M"
            cpu: "100m"
        readinessProbe:
          tcpSocket:
            port: web-port
          initialDelaySeconds: 5
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /status.html
            port: web-port
          initialDelaySeconds: 3
          periodSeconds: 60
      volumes:
        - name: apiconfig-volume
          configMap:
            name: openrmf-apiconfig
        - name: authconfig-volume
          configMap:
            name: openrmf-authconfig
---
apiVersion: v1
kind: Service
metadata:
  name: openrmf-web
  namespace: {{.Values.namespace | default "openrmf"}}
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: web-ui-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: helm
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    run: openrmf-web
  sessionAffinity: None
  type: {{.Values.serviceType | default "NodePort"}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openrmf-web-ingress
  namespace: {{.Values.namespace}}
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: web-ui-ingress
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 16m
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, OPTIONS, POST, PUT, DELETE, PATCH"
spec:
  rules:
  - host: {{.Values.dnsName}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: openrmf-web
            port:
              number: 8080
