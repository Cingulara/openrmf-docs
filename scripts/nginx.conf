worker_processes 4;
 
pid /tmp/nginx.pid; # Changed from /var/run/nginx.pid

events { worker_connections 4096; }
 
http {
 
    # enable compression for larger JSON and XML responses
    gzip on;
    gzip_types text/html application/json text/css application/xml text/plain;
    gzip_proxied any;
    gzip_static on;
    gzip_min_length 1000;

    ## don't send the nginx version number in error pages and Server header
    server_tokens off;

    sendfile on;
    client_max_body_size 60M;
    include /etc/nginx/mime.types;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    # update the buffer for longer URLs to validate login and redirect back
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;

    upstream api-read {
        server openrmfapi-read:8084;
    }
    upstream api-template {
        server openrmfapi-template:8088;
    }
    upstream api-scoring {
        server openrmfapi-scoring:8090;
    }
    upstream api-control {
        server openrmfapi-controls:8094;
    }
    upstream api-audit {
        server openrmfapi-audit:8096;
    }
    upstream api-report {
        server openrmfapi-report:8098;
    }
 
    server {
        listen 8080;

        root /usr/share/nginx/html;

        # don't send the nginx version number in error pages and Server header
        server_tokens off;

        # config to don't allow the browser to render the page inside an frame or iframe
        add_header X-Frame-Options "deny" always;

        # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
        # to disable content-type sniffing on some browsers.
        add_header X-Content-Type-Options nosniff always;

        # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
        # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
        # this particular website if it was disabled by the user.
        add_header X-XSS-Protection "1; mode=block" always;

        error_page 404 /404.html;
        location = /404.html {
                root /usr/share/nginx/html/;
                internal;
        }
        error_page 502 /502.html;
        location = /502.html {
                root /usr/share/nginx/html/;
                internal;
        }

        location /api/read/ {
            proxy_pass         http://api-read;
            rewrite            ^/api/read(.*)$ $1 break;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location /api/template/ {
            proxy_pass         http://api-template;
            rewrite            ^/api/template(.*)$ $1 break;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location /api/scoring/ {
            proxy_pass         http://api-scoring;
            rewrite            ^/api/scoring(.*)$ $1 break;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location /api/control/ {
            proxy_pass         http://api-control;
            rewrite            ^/api/control(.*)$ $1 break;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location /api/audit/ {
            proxy_pass         http://api-audit;
            rewrite            ^/api/audit(.*)$ $1 break;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location /api/report/ {
            proxy_pass         http://api-report;
            rewrite            ^/api/report(.*)$ $1 break;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        location /auth/ {
            proxy_set_header   Host              $host:8080; # to forward the original host requested by the client
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-NginX-Proxy     true;
            proxy_set_header   X-Forwarded-Port  $server_port;
            proxy_pass         http://openrmf-keycloak:8080;
            add_header         X-Frame-Options   "ALLOWALL";
        }
        location /metrics/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $http_host;
            proxy_pass http://grafana:3000/;
        }
        # Proxy Grafana Live WebSocket connections.
        location /metrics/api/live {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $http_host;
            proxy_pass http://grafana:3000/;
        }
		location /status {
           stub_status;
        }
    }
}